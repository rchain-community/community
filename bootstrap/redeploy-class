#!/bin/bash

[ ! -d ~/.rnode ] && echo "
$0: $HOME/.rnode does not exist
Use 'bootstrap' to fix.
" && exit 1

CLASS=`basename $1|sed 's/.rho$//'`
ME=`basename $0`
LOGFILE="log/$ME.$1.log"
DEPLOY="./deploy"


cd `dirname $0`

if ! ps -fu | grep "java.*rnode" |grep -v grep > /dev/null 2>&1 ;then
   echo "rnode not running. Use ./run-rnode to fix." && exit 1
fi


$DEPLOY $1 |tee -a $LOGFILE

# Finalize the rnode
echo "Proposing...." |tee -a $LOGFILE
rnode --grpc-port 40402 propose 2>&1 | tail -n 0 -F log/run-rnode.log | sed '/Blocks ready to be added/q' 2>&1
echo "Propose finished." |tee -a $LOGFILE

URI=`grep \#define log/run-rnode.log|tail -1|cut -d' ' -f3|sed 's/]//'`

echo "Generating master directory update."
echo "match [$URI]{[newURI] => {" > generated/generated.$ME.$CLASS.update-directory.rho

cat - >> generated/generated.$ME.$CLASS.update-directory.rho << EOF
new
   lookup(\`rho:registry:lookup\`),
   stdout(\`rho:io:stdout\`),
   deployerId(\`rho:rchain:deployerId\`),
   ch,
   ch1,
   ch2,
   lookCh,
   masterChLookup
EOF
echo "in {" >> generated/generated.$ME.$CLASS.update-directory.rho
cat - >> generated/generated.$ME.$CLASS.update-directory.rho << EOF3
for(@{"read": *read, "write": *write, ..._} <<- @[*deployerId, "MasterContractAdmin"]) {
   stdout!(["read", *read, "write", *write]) |
   read!("$CLASS", *ch) |
   for (oldClass <- ch) {
      stdout!(["Old class $CLASS", *oldClass]) |
      lookup!(newURI, *lookCh) |
      for (C <- lookCh) {
         stdout!(["writing class to dictionary: $CLASS", newURI, *C]) |
         write!("$CLASS", *C, *ch1) |
         for (result <- ch1) {
            stdout!(["Write result", *result]) |
            read!("$CLASS", *ch2) |
            for (dumb <- ch2) {
               stdout!(["Updated value", *dumb])
            }
         }
      }
   }
}}}}
EOF3

$DEPLOY generated/generated.$ME.$CLASS.update-directory.rho

echo "Proposing master directory update...." |tee -a $LOGFILE
rnode --grpc-port 40402 propose 2>&1 | tail -n 0 -F log/run-rnode.log | sed '/Blocks ready to be added/q' 2>&1

echo "Waiting for rnode to complete (10s)" && sleep 10
